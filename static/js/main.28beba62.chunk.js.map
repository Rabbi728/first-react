{"version":3,"sources":["components/layouts/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","params","className","to","title","type","id","link","placeholder","defaultProps","TextForm","props","document","useState","text","setText","heading","rows","onChange","event","target","value","onClick","toUpperCase","About","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8LAGe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,SAAuCF,EAAOG,QAC9C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMH,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACI,qBAAIJ,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,4BAA4B,eAAa,OAAOC,GAAG,IAAnE,oBAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,qBAAqBC,GAAG,SAAxC,SAAkDF,EAAOM,YAGjE,uBAAML,UAAU,SAAhB,UACI,uBAAOA,UAAU,oBAAoBG,KAAK,SAASG,YAAY,SAAS,aAAW,WACnF,wBAAQN,UAAU,0BAA0BG,KAAK,SAAjD,+BAaxBL,EAAOS,aAAe,CAClBL,MAAQ,gB,YClCG,SAASM,EAASC,GAE7BC,SAASR,MAAQ,0BACjB,MAAwBS,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACI,sBAAKb,UAAU,iBAAf,UACI,6BAAKS,EAAMK,UACX,qBAAKd,UAAU,OAAf,SACI,0BAAUe,KAAK,IAAIf,UAAU,eAAegB,SARjC,SAACC,GACpBJ,EAAQI,EAAMC,OAAOC,QAOyDA,MAAOP,EAAMR,GAAG,eAE1F,wBAAQD,KAAK,SAASH,UAAU,kBAAkBoB,QAbpC,WAClBP,EAAQD,EAAKS,gBAYT,0BCjBG,SAASC,IAEpB,OADAZ,SAASR,MAAQ,0BAEb,8BACI,4D,WCmBGqB,MAhBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQrB,MAAM,YAAYG,KAAK,aAC/B,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,SAAlB,SACE,cAACH,EAAD,MAEF,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACE,cAACjB,EAAD,CAAUM,QAAQ,iCCNfY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.28beba62.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport {Link} from \"react-router-dom\";\n\nexport default function Navbar(params) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{params.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link text-dark active\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link text-dark\" to=\"/about\">{params.link}</Link>\n                        </li>\n                    </ul>\n                    <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title : PropTypes.string,\n    link : PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title : \"Rabbi Ahamed\"\n}","import React, {useState} from 'react'\n\nexport default function TextForm(props) \n{\n    document.title = \"First React || Textarea\";\n    const [text, setText] = useState(\"Enter Text Here\")\n    const handleUpClick = ()=>{\n        setText(text.toUpperCase());\n    }\n    const handleOnChange = (event)=>{\n        setText(event.target.value);\n    }\n\n    return (\n        <div className=\"container my-3\">\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea rows=\"8\" className=\"form-control\" onChange={handleOnChange} value={text} id=\"text-box\"></textarea>\n            </div>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleUpClick}>UpperCase</button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    document.title = \"First React || About Us\";\n    return (\n        <div>\n            <h1>Hi, This is Rabbi Ahamed</h1>\n        </div>\n    )\n}\n","import Header from \"./components/layouts/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header title=\"TextUtils\" link=\"About Us\" />\n      <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm heading=\"Enter The Text Here\" />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}